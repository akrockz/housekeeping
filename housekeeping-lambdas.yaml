---
AWSTemplateFormatVersion: '2010-09-09'
Description: Housekeeping lambdas.

Parameters:

  ArtifactBucketName:
    Type: String
    Description: Base URL for artifacts in S3. From deployspec compiler.

  ArtifactKeyPrefix:
    Type: String
    Description: Build path prefix for this app. From deployspec compiler.

  AutomationBranchS3Prefix:
    Type: String
    Description: Location to download/upload state files. Assumes ArtifactBucketName bucket.

  LambdaFunctionNamePrefix:
    Type: String

  DeleteLogGroups:
    Type: String
    Default: "False"

  Days:
    Type: String
    Default: "7"

Resources:

  # TODO Alarm off CW Metric - core-housekeeping-clean-log-groups.Errors.

  HousekeepingTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref LambdaFunctionNamePrefix
      DisplayName: !Ref LambdaFunctionNamePrefix
      Subscription:
        - Endpoint: abc@com
          Protocol: email

  CleanLogGroupsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CleanLogGroupsPolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow # To persist the per-account tracking of log groups to delete.
                Action:
                  - s3:ListBucket
                Resource:
                  - Fn::Sub: "arn:aws:s3:::${ArtifactBucketName}"
              - Effect: Allow # To persist the per-account tracking of log groups to delete.
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - Fn::Sub: "arn:aws:s3:::${ArtifactBucketName}/${AutomationBranchS3Prefix}/*"
              - Effect: Allow # All the cloudwatch! It's a delete program, so yeh.
                Action:
                  - logs:DescribeLog*
                  - logs:DeleteLogGroup
                Resource: "*"

  CleanLogGroupsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: "/aws/lambda/${LambdaFunctionNamePrefix}-clean-log-groups"
      RetentionInDays: 90

  CleanLogGroupsLambda:
    Type: AWS::Lambda::Function
    DependsOn:
      - CleanLogGroupsLogGroup
    Properties:
      Description: Clean up old, empty log groups in the account.
      Code:
        S3Bucket:
          Ref: ArtifactBucketName
        S3Key:
          Fn::Sub: "${ArtifactKeyPrefix}/clean_log_groups.zip"
      FunctionName:
        Fn::Sub: "${LambdaFunctionNamePrefix}-clean-log-groups"
      Handler: clean_log_groups.handler
      MemorySize: 256
      Role:
        Fn::GetAtt: [ CleanLogGroupsRole, Arn ]
      Runtime: python3.7
      Timeout: 300
      Environment:
        Variables:
          AUTOMATION_BUCKET: !Ref ArtifactBucketName
          AUTOMATION_BRANCH_S3_PREFIX: !Ref AutomationBranchS3Prefix # Upload/download to s3.
          ACCOUNT_ID: !Sub "${AWS::AccountId}" # used for filename, useful when testing locally on multiple accounts.
          DELETE_LOG_GROUPS: !Ref DeleteLogGroups
          DAYS: !Ref Days

  CleanLogsEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Schedule lambda invoke."
      ScheduleExpression: "cron(0 20 * * ? *)" # 8pm UTC daily (4am SGT)
      Targets:
        - Id: CleanLogGroupsLambdaTarget
          Arn: !GetAtt CleanLogGroupsLambda.Arn

  CleanLogGroupsLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: CleanLogGroupsLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CleanLogsEventRule.Arn

Outputs:

  CleanLogGroupsLambdaArn:
    Value: !GetAtt CleanLogGroupsLambda.Arn
